// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: netV/Services/register.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Device struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,1,opt,name=Model,proto3" json:"Model,omitempty"`
	Make          string                 `protobuf:"bytes,2,opt,name=Make,proto3" json:"Make,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=Version,proto3" json:"Version,omitempty"`
	IP            string                 `protobuf:"bytes,4,opt,name=IP,proto3" json:"IP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_netV_Services_register_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_netV_Services_register_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_netV_Services_register_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *Device) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Device) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

type ID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetVID        string                 `protobuf:"bytes,1,opt,name=netVID,proto3" json:"netVID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ID) Reset() {
	*x = ID{}
	mi := &file_netV_Services_register_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_netV_Services_register_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_netV_Services_register_proto_rawDescGZIP(), []int{1}
}

func (x *ID) GetNetVID() string {
	if x != nil {
		return x.NetVID
	}
	return ""
}

var File_netV_Services_register_proto protoreflect.FileDescriptor

const file_netV_Services_register_proto_rawDesc = "" +
	"\n" +
	"\x1cnetV/Services/register.proto\x12\x04netV\"\\\n" +
	"\x06Device\x12\x14\n" +
	"\x05Model\x18\x01 \x01(\tR\x05Model\x12\x12\n" +
	"\x04Make\x18\x02 \x01(\tR\x04Make\x12\x18\n" +
	"\aVersion\x18\x03 \x01(\tR\aVersion\x12\x0e\n" +
	"\x02IP\x18\x04 \x01(\tR\x02IP\"\x1c\n" +
	"\x02ID\x12\x16\n" +
	"\x06netVID\x18\x01 \x01(\tR\x06netVID2]\n" +
	"\bRegister\x12(\n" +
	"\x0eRegisterDevice\x12\f.netV.Device\x1a\b.netV.ID\x12'\n" +
	"\rGetDevicebyID\x12\b.netV.ID\x1a\f.netV.DeviceB\x12Z\x10netV/Services;pbb\x06proto3"

var (
	file_netV_Services_register_proto_rawDescOnce sync.Once
	file_netV_Services_register_proto_rawDescData []byte
)

func file_netV_Services_register_proto_rawDescGZIP() []byte {
	file_netV_Services_register_proto_rawDescOnce.Do(func() {
		file_netV_Services_register_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_netV_Services_register_proto_rawDesc), len(file_netV_Services_register_proto_rawDesc)))
	})
	return file_netV_Services_register_proto_rawDescData
}

var file_netV_Services_register_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_netV_Services_register_proto_goTypes = []any{
	(*Device)(nil), // 0: netV.Device
	(*ID)(nil),     // 1: netV.ID
}
var file_netV_Services_register_proto_depIdxs = []int32{
	0, // 0: netV.Register.RegisterDevice:input_type -> netV.Device
	1, // 1: netV.Register.GetDevicebyID:input_type -> netV.ID
	1, // 2: netV.Register.RegisterDevice:output_type -> netV.ID
	0, // 3: netV.Register.GetDevicebyID:output_type -> netV.Device
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_netV_Services_register_proto_init() }
func file_netV_Services_register_proto_init() {
	if File_netV_Services_register_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_netV_Services_register_proto_rawDesc), len(file_netV_Services_register_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_netV_Services_register_proto_goTypes,
		DependencyIndexes: file_netV_Services_register_proto_depIdxs,
		MessageInfos:      file_netV_Services_register_proto_msgTypes,
	}.Build()
	File_netV_Services_register_proto = out.File
	file_netV_Services_register_proto_goTypes = nil
	file_netV_Services_register_proto_depIdxs = nil
}
